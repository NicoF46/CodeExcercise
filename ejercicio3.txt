#############################################################################
##
## PROBLEM 3
##
## What are the dangers/inefficiencies of this code below, how can we fix it
##
############################################################################## 

#app/models/book.rb
#class Book < ActiveRecord::Record
#has_many :reviews
#end
#class Review < ActiveRecord::Record
#belongs_to :user
#belongs_to :book
#end
#class User < ActiveRecord::Record
#has_many :reviews
#end
#app/views/users/show.html.erb
#@book = Book.find(1)
#@book.reviews.each do |review|
#<%= review.content.html_safe %> by <%= review.user.full_name %>
#end


## Answer #####
* I think we should remove the logic from the view and move it to the controller.
For example the query to get the user 1.
* I think we should't use a harcoded user id.
* I think we should add validations to the models.
* I think we should move the reviews loop from the view file to a view helper file and just
 call it in the view file.
* I think we can use saninitize in the review content since I don't know from where it got his value. This could
generate Cross-site Scripting (XSS) vulnerabilities.
* I think the associations are mandatory because if not, you can get an error when you try to access attributes
values throught associations, like this review.user.full_name.


